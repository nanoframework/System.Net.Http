trigger:
  branches:
    include:
    - master
    - develop
    - release/*
    - refs/tags/*
  paths:
    exclude:
    - CHANGELOG.md
    - /*.md
    - .gitignore
    - appveyor.yml
  # waiting for feature to become available
  # tags:
  #   include:
  #   - v/*

pr:
  branches:
    include:
    - master
    - develop
    - release/*
  autoCancel: true

# add nf-tools repo to resources (for Azure Pipelines templates)
resources:
  repositories:
    - repository: templates
      type: github
      name: nanoframework/nf-tools
      endpoint: nanoframework

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/source/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  nugetPackageName: 'nanoFramework.System.Net.Http'
  repoName: 'lib-nanoFramework.System.Net.Http'

steps:

# step from template @ nf-tools repo
# build steps only
- template: azure-pipelines-templates/class-lib-build-only.yml@templates  

# package steps
- template: azure-pipelines-templates/class-lib-package.yml@templates  
  parameters:
    nugetPackageName: 'nanoFramework.System.Net.Http'

- template: azure-pipelines-templates/class-lib-package.yml@templates  
  parameters:
    nugetPackageName: 'nanoFramework.System.Net.Http.Client'

- template: azure-pipelines-templates/class-lib-package.yml@templates  
  parameters:
    nugetPackageName: 'nanoFramework.System.Net.Http.Server'

# create or update GitHub release
- task: GitHubReleasePublish@1
  inputs:
    githubEndpoint: 'nanoframework'
    githubOwner: 'nanoframework'
    githubRepositoryName: $(repoName)
    githubTag: v$(MY_NUGET_VERSION)
    githubReleaseTitle: '$(nugetPackageName) Library v$(MY_NUGET_VERSION)'
    githubReleaseNotes: 'Check the [changelog]($(Build.Repository.Uri)/blob/$(Build.SourceBranchName)/CHANGELOG.md).<br><br><h4>Install from nanoFramework MyGet development feed</h4><br>The following NuGet packages are available for download from this release:<br>:package: [.NET](https://www.myget.org/feed/nanoframework-dev/package/nuget/$(nugetPackageName)/$(MY_NUGET_VERSION)) v$(MY_NUGET_VERSION)<br>:package: [.NET (client API only)](https://www.myget.org/feed/nanoframework-dev/package/nuget/nanoFramework.System.Net.Http-client/$(MY_NUGET_VERSION)) v$(MY_NUGET_VERSION).<br>:package: [.NET (server API only)](https://www.myget.org/feed/nanoframework-dev/package/nuget/nanoFramework.System.Net.Http-server/$(MY_NUGET_VERSION)) v$(MY_NUGET_VERSION).'
    githubTargetCommitsh: $(Build.SourceVersion)
    githubReleaseDraft: true
    githubReleasePrerelease: true
    githubReuseDraftOnly: true
    githubReuseRelease: true
    githubEditRelease: true
    githubReleaseAsset: '$(Build.ArtifactStagingDirectory)/*.nupkg'
  condition: and( succeeded(), not( startsWith(variables['Build.SourceBranch'], 'refs/pull') ), not( startsWith(variables['Build.SourceBranch'], 'refs/tags/v') ) )
  displayName: Create/Update GitHub release

# create or update GitHub release ON tags from release or master branches
- task: GitHubReleasePublish@1
  inputs:
    githubEndpoint: 'nanoframework'
    githubOwner: 'nanoframework'
    githubRepositoryName: $(repoName)
    githubTag: v$(MY_NUGET_VERSION)
    githubReleaseTitle: '$(nugetPackageName) Library v$(MY_NUGET_VERSION)'
    githubReleaseNotes: 'Check the [changelog]($(Build.Repository.Uri)/blob/$(Build.SourceBranchName)/CHANGELOG.md).<br><br><h4>Install from NuGet</h4><br>The following NuGet packages are available for download from this release:<br>:package: [.NET](https://www.nuget.org/packages/$(nugetPackageName)/$(MY_NUGET_VERSION)) v$(MY_NUGET_VERSION).<br>:package: [.NET (client API only)](https://www.nuget.org/packages/nanoFramework.System.Net.Http-client/$(MY_NUGET_VERSION)) v$(MY_NUGET_VERSION).<br>:package: [.NET (server API only)](https://www.nuget.org/packages/nanoFramework.System.Net.Http-server/$(MY_NUGET_VERSION)) v$(MY_NUGET_VERSION).'
    githubTargetCommitsh: $(Build.SourceVersion)
    githubReleaseDraft: false
    githubReleasePrerelease: false
    githubReuseDraftOnly: false
    githubReuseRelease: true
    githubEditRelease: true
    githubReleaseAsset: '$(Build.ArtifactStagingDirectory)/*.nupkg'
  condition: and( succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v') )
  displayName: Create/Update GitHub release

# step from template @ nf-tools repo
# report error
- template: azure-pipelines-templates/discord-webhook-task.yml@templates  
  parameters:
    status: 'failure'
    webhookUrl: '$(DiscordWebhook)'
    message: ''
